

    import boto3
    import pandas as pd
    import time
    from io import StringIO

    AWS_ACCESS_KEY = "AKIA4S7KF52LLAR2RFU2"
    AWS_SECRET_KEY = "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"
    AWS_REGION = 'ca-central-1'
    SCHEMA_NAME = "covid19_dataset"
    S3_STAGING_DIR = "s3://rakin-athena-output/output/"
    S3_BUCKET_NAME = "rakin-athena-output"
    S3_OUTPUT_DIRECTORY = "output"

    athena_client = boto3.client(
        "athena",
        aws_access_key_id=AWS_ACCESS_KEY,
        aws_secret_access_key=AWS_SECRET_KEY,
        region_name=AWS_REGION,
    )

    Dict = {}

    def download_and_query_results(
        client: boto3.client, query_response: Dict
    ) -> pd.DataFrame:
        
        while True: 
            try:
                results=client.get_query_execution(
                    QueryExecutionId = query_response["QueryExecutionId"])
                client.get_query_results(
                    QueryExecutionId=query_response["QueryExecutionId"]
                )
                break
            except Exception as err:
                if "not yet finished" in str(err):
                    time.sleep(1)
                else:
                    raise err
        
        temp_file: str = "athena_results.csv"
        
        s3_client = boto3.client(
            "s3",
            aws_access_key_id=AWS_ACCESS_KEY,
            aws_secret_access_key=AWS_SECRET_KEY,
            region_name=AWS_REGION
        )
        
        s3_client.download_file(
            S3_BUCKET_NAME,
            f"{S3_OUTPUT_DIRECTORY}/{query_response['QueryExecutionId']}.csv",
            temp_file,
        )

        return pd.read_csv(temp_file)

    result = athena_client.start_query_execution(
        QueryString="SELECT * FROM country_codes_countrycode",
        QueryExecutionContext={"Database": SCHEMA_NAME},
        ResultConfiguration={
            "OutputLocation": S3_STAGING_DIR,
            "EncryptionConfiguration": {"EncryptionOption": "SSE_S3"},
        },
    )

    result

    {'QueryExecutionId': 'c8bff790-141b-4628-bb50-43f3ac76ca74',
     'ResponseMetadata': {'RequestId': '5fe71d24-c098-4a0f-94ac-991b5fb346f8',
      'HTTPStatusCode': 200,
      'HTTPHeaders': {'content-type': 'application/x-amz-json-1.1',
       'date': 'Thu, 13 Jan 2022 08:43:53 GMT',
       'x-amzn-requestid': '5fe71d24-c098-4a0f-94ac-991b5fb346f8',
       'content-length': '59',
       'connection': 'keep-alive'},
      'RetryAttempts': 0}}

    country_codes_countrycode = download_and_query_results(athena_client, result)


    country_codes_countrycode.head()

              country alpha-2 code alpha-3 code  numeric code  latitude  longitude
    0     Afghanistan           AF          AFG           4.0   33.0000       65.0
    1         Albania           AL          ALB           8.0   41.0000       20.0
    2         Algeria           DZ          DZA          12.0   28.0000        3.0
    3  American Samoa           AS          ASM          16.0  -14.3333     -170.0
    4         Andorra           AD          AND          20.0   42.5000        1.6

    result = athena_client.start_query_execution(
        QueryString="SELECT * FROM county_populationcountypopulation",
        QueryExecutionContext={"Database": SCHEMA_NAME},
        ResultConfiguration={
            "OutputLocation": S3_STAGING_DIR,
            "EncryptionConfiguration": {"EncryptionOption": "SSE_S3"},
        },
    )

    county_populationcountypopulation = download_and_query_results(athena_client, result)


    result = athena_client.start_query_execution(
        QueryString="SELECT * FROM covid_19_testing_data_us_daily_us_daily",
        QueryExecutionContext={"Database": SCHEMA_NAME},
        ResultConfiguration={
            "OutputLocation": S3_STAGING_DIR,
            "EncryptionConfiguration": {"EncryptionOption": "SSE_S3"},
        },
    )

    covid_19_testing_data_us_daily_us_daily = download_and_query_results(athena_client, result)

    result = athena_client.start_query_execution(
        QueryString="SELECT * FROM covid_19_testing_data_us_total_latest_us_total_latest",
        QueryExecutionContext={"Database": SCHEMA_NAME},
        ResultConfiguration={
            "OutputLocation": S3_STAGING_DIR,
            "EncryptionConfiguration": {"EncryptionOption": "SSE_S3"},
        },
    )

    covid_19_testing_data_us_total_latest_us_total_latest = download_and_query_results(athena_client, result)

    result = athena_client.start_query_execution(
        QueryString="SELECT * FROM enigma_jhud",
        QueryExecutionContext={"Database": SCHEMA_NAME},
        ResultConfiguration={
            "OutputLocation": S3_STAGING_DIR,
            "EncryptionConfiguration": {"EncryptionOption": "SSE_S3"},
        },
    )

    enigma_jhud = download_and_query_results(athena_client, result)

    result = athena_client.start_query_execution(
        QueryString="SELECT * FROM nytimes_data_in_usa_county_us_county",
        QueryExecutionContext={"Database": SCHEMA_NAME},
        ResultConfiguration={
            "OutputLocation": S3_STAGING_DIR,
            "EncryptionConfiguration": {"EncryptionOption": "SSE_S3"},
        },
    )

    nytimes_data_in_usa_county_us_county = download_and_query_results(athena_client, result)

    result = athena_client.start_query_execution(
        QueryString="SELECT * FROM nytimes_data_in_usa_us_states",
        QueryExecutionContext={"Database": SCHEMA_NAME},
        ResultConfiguration={
            "OutputLocation": S3_STAGING_DIR,
            "EncryptionConfiguration": {"EncryptionOption": "SSE_S3"},
        },
    )

    nytimes_data_in_usa_us_states = download_and_query_results(athena_client, result)

    result = athena_client.start_query_execution(
        QueryString="SELECT * FROM nytimes_data_in_usa_us_states",
        QueryExecutionContext={"Database": SCHEMA_NAME},
        ResultConfiguration={
            "OutputLocation": S3_STAGING_DIR,
            "EncryptionConfiguration": {"EncryptionOption": "SSE_S3"},
        },
    )

    nytimes_data_in_usa_us_states = download_and_query_results(athena_client, result)

    result = athena_client.start_query_execution(
        QueryString="SELECT * FROM testing_data_states_dailystates_daily",
        QueryExecutionContext={"Database": SCHEMA_NAME},
        ResultConfiguration={
            "OutputLocation": S3_STAGING_DIR,
            "EncryptionConfiguration": {"EncryptionOption": "SSE_S3"},
        },
    )

    testing_data_states_dailystates_daily = download_and_query_results(athena_client, result)

    result = athena_client.start_query_execution(
        QueryString="SELECT * FROM usa_hospital_beds_rearc_usa_hospital_beds",
        QueryExecutionContext={"Database": SCHEMA_NAME},
        ResultConfiguration={
            "OutputLocation": S3_STAGING_DIR,
            "EncryptionConfiguration": {"EncryptionOption": "SSE_S3"},
        },
    )

    usa_hospital_beds_rearc_usa_hospital_beds = download_and_query_results(athena_client, result)


